# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release,Debug]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install dependencies (linux)
      if: matrix.os == 'ubuntu-latest'
      run: >
          sudo apt install -y libjpeg8-dev libpng-dev libasound2-dev 
          alsa-utils alsa-oss libx11-dev libxft-dev libxcursor-dev

    - name: Configure CMake (gui)
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      uses: coactions/setup-xvfb@v1
      with:
        run: ctest --build-config ${{ matrix.build_type }} --output-on-failure
        working-directory: ${{ steps.strings.outputs.build-output-dir }}/tests

    - name: Create build artifact
      if: ${{ matrix.build_type == 'Release' }}
      uses: actions/upload-artifact@v4
      with:
        name: build-out-${{ matrix.os }}-${{ matrix.c_compiler }}
        path: ${{ steps.strings.outputs.build-output-dir }}
        retention-days: 5